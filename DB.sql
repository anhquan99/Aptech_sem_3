CREATE DATABASE APTECH_SEM_3
USE msdb
DROP DATABASE APTECH_SEM_3
USE APTECH_SEM_3
	BEGIN TRANSACTION;
		--USER
		CREATE TABLE USR(
			APPLY_ID INT ,
			USERNAME VARCHAR(100) NOT NULL PRIMARY KEY,
			PASSWORD VARCHAR(100) NOT NULL,
			ROLE VARCHAR(50)
		)
		CREATE TABLE TEST(
			POST_ID INT NOT NULL,
			START_TIME DATETIME  NOT NULL,
			END_TIME DATETIME  NOT NULL,
			TEST_NAME VARCHAR(250) NOT NULL,
			TEST_ID INT IDENTITY(1,1) PRIMARY KEY --TEST ID
		)
		CREATE TABLE TEST_QUESTION(
			TEST_ID INT  NOT NULL, --TEST ID
			QUESTION_ID INT  NOT NULL  --QUESTION ID
		)
		ALTER TABLE TEST_QUESTION ADD PRIMARY KEY(TEST_ID,QUESTION_ID)
		CREATE TABLE QUESTION(
			CATEGORY VARCHAR(250) NOT NULL, --FIX TREN WEB
			QUESTION_ID INT IDENTITY (1,1) PRIMARY KEY,
			QUESTION TEXT  NOT NULL,
			POINT INT NOT NULL 
		)	
		CREATE TABLE ANSWER(
			ANSWER_ID INT IDENTITY(1,1) PRIMARY KEY,
			QUESTION_ID INT  NOT NULL,
			ANSWER TEXT  NOT NULL,
			STATUS BIT  NOT NULL
		)
		--RESULT
		CREATE TABLE RESULT(
			APPLY_ID INT NOT NULL,
			TEST_ID INT NOT NULL,
			TEST_INDEX INT NOT NULL DEFAULT 0,
			TEST_RESULT_1 FLOAT NOT NULL DEFAULT 0,
			TEST_RESULT_2 FLOAT NOT NULL DEFAULT 0,
			TEST_RESULT_3 FLOAT NOT NULL DEFAULT 0
		)
		ALTER TABLE RESULT ADD PRIMARY KEY(APPLY_ID, TEST_ID)
		CREATE TABLE JOB_POST(
			POST_ID INT IDENTITY(1,1) PRIMARY KEY, --POST ID
			CREATED DATETIME  NOT NULL,
			END_DATE DATETIME NOT NULL,
			TITLE VARCHAR(250) NOT NULL,
			POST TEXT  NOT NULL
		)
		--CANIDATE APPLICATION
		CREATE TABLE JOB_APPLICATION(
			APPLY_ID INT IDENTITY(1,1) PRIMARY KEY,
			POST_ID INT NOT NULL,
			PERSONAL_ID VARCHAR(100) NOT NULL,
			NAME VARCHAR(100) NOT NULL,
			ADDRESS VARCHAR(100) NOT NULL,
			PHONE VARCHAR(100) NOT NULL,
			MAIL VARCHAR(250) NOT NULL,
			EDUCATION TEXT NOT NULL,
			WORK_EXP TEXT NOT NULL, --WORK EXPERIENCE
			CREATED DATETIME  NOT NULL,
			APPROVE_STATUS INT NOT NULL DEFAULT 0 -- APPROVE 1, UNAPPROVE -1, 
		)
		CREATE TABLE REPORT(
			CREATED DATETIME PRIMARY KEY,
			PERCENT_HIGH_SCORE FLOAT NOT NULL, -->=80%
			PERCENT_MIDDLE_SCORE FLOAT NOT NULL, -->=50
			PERCENT_ATTEMPT FLOAT NOT NULL,
			PERCENT_FAST_FINISH FLOAT NOT NULL,
			PERCENT_HIGH_PART_1 FLOAT NOT NULL,
			PERCENT_MID_PART_1 FLOAT NOT NULL, --LIET KE NHUNG NGUOI CO SO DIEM
			PERCENT_HIGH_PART_2 FLOAT NOT NULL,
			PERCENT_MID_PART_2 FLOAT NOT NULL, --LIET KE NHUNG NGUOI CO SO DIEM
			PERCENT_HIGH_PART_3 FLOAT NOT NULL,
			PERCENT_MID_PART_3 FLOAT NOT NULL --LIET KE NHUNG NGUOI CO SO DIEM
		)
	--LINK TABLE
		--TEST
		ALTER TABLE TEST ADD CONSTRAINT TEST_POST FOREIGN KEY (POST_ID) REFERENCES JOB_POST(POST_ID)
		--TEST_QUESTION
		ALTER TABLE TEST_QUESTION ADD CONSTRAINT TEST_QUESTION_TEST FOREIGN KEY (TEST_ID) REFERENCES TEST(TEST_ID)
		ALTER TABLE TEST_QUESTION ADD CONSTRAINT TEST_QUESTION_QUESTION FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION(QUESTION_ID)
		--ANSWER
		ALTER TABLE ANSWER ADD CONSTRAINT ANSWER_QUESTION FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION(QUESTION_ID)
		--RESULT
		ALTER TABLE RESULT ADD CONSTRAINT RESULT_APPLICATION FOREIGN KEY (APPLY_ID) REFERENCES JOB_APPLICATION(APPLY_ID)
		ALTER TABLE RESULT ADD CONSTRAINT RESULT_TEST FOREIGN KEY (TEST_ID) REFERENCES TEST(TEST_ID)
		--JOB POST
		ALTER TABLE JOB_APPLICATION ADD CONSTRAINT JOB_APPLICATION_JOB_POST FOREIGN KEY(POST_ID) REFERENCES JOB_POST(POST_ID)
		--USER
		ALTER TABLE USR ADD CONSTRAINT USRS_JOB_APPLICATION FOREIGN KEY (APPLY_ID) REFERENCES JOB_APPLICATION(APPLY_ID)
		go
		CREATE PROC FIND_QID_FROM_USERNAME
			@USERNAME VARCHAR(250)
			AS
			SELECT QUESTION_ID FROM TEST_QUESTION WHERE TEST_ID =
			(SELECT TEST_ID  FROM RESULT WHERE APPLY_ID =
			(SELECT APPLY_ID FROM USR WHERE USERNAME = @USERNAME))
		go
		CREATE PROC FIND_USR_BY_TEST_END 
			@TIME1 DATETIME, @TIME2 DATETIME
			AS
			SELECT * FROM USR WHERE APPLY_ID = 
			(SELECT APPLY_ID FROM JOB_APPLICATION WHERE POST_ID =
			(SELECT POST_ID FROM TEST WHERE END_TIME <= @TIME1 AND END_TIME >= @TIME2 ))
		GO
		CREATE PROCEDURE FIND_QUESTION_WITH_TEST @TEST_ID int
		AS
		BEGIN
			SELECT * FROM TEST_QUESTION WHERE TEST_ID = @TEST_ID ORDER BY QUESTION_ID DESC
		END

		GO
		CREATE PROCEDURE GET_LAST_QUESTION
		AS
		BEGIN
		SELECT TOP 1 * FROM QUESTION ORDER BY QUESTION_ID DESC 
		END

		GO
		CREATE PROCEDURE GET_2_RANDOM_QUESTIONS @CATEGORY nvarchar(250), @POINT int
		AS
		BEGIN
			SELECT TOP 2 * FROM QUESTION WHERE CATEGORY = @CATEGORY AND POINT = @POINT ORDER BY NEWID()
	
		END

		GO
		CREATE PROCEDURE GET_1_RANDOM_QUESTION @CATEGORY nvarchar(250), @POINT int
		AS
		BEGIN
			SELECT TOP 1 * FROM QUESTION WHERE CATEGORY = @CATEGORY AND POINT = @POINT ORDER BY NEWID()
		END
	COMMIT;
	--ROLLBACK;

		